{"version":3,"sources":["utils/imagesAPI.js","components/loader.js","components/searchBar.js","components/imageGallery.js","components/error.js","components/loadMoreButton.js","components/modal.js","components/imageGalleryItem.js","App.js","index.js"],"names":["searchQuery","page","key","axios","get","then","res","data","hits","Spinner","type","color","height","width","timeout","React","Component","SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","autocomplete","autofocus","placeholder","onChange","ImageGallerry","handlerModal","currentTarget","onImageClick","onClick","children","Error","message","LoadMoreButton","handleClick","Modal","handleKeyDown","code","onClose","handleClose","window","addEventListener","removeEventListener","ImageGalleryItem","images","map","id","webformatURL","tags","onCardClick","src","alt","App","loading","error","showModal","modalContent","fetchImages","imagesAPI","prevState","catch","finally","handleSearchSubmit","query","toggleModal","handlerModalContent","content","find","image","largeImageURL","prevProps","prevQuery","nextQuery","prevImages","nextImages","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.962334f3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst fetchImagesWithQuery = (\r\n  searchQuery,\r\n  page = 1,\r\n  key = \"17752655-7d1e30d3f189053aec3fab03b\"\r\n) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((res) => res.data.hits);\r\n};\r\nexport default {\r\n  fetchImagesWithQuery,\r\n};\r\n","import React from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport default class Spinner extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass SearchBar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={this.state.inputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass ImageGallerry extends Component {\r\n  static propTypes = {\r\n    onImageClick: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n  handlerModal = (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n      this.props.onImageClick();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\" onClick={this.handlerModal}>\r\n        {this.props.children}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallerry;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Error = ({ message }) => <p>{message}</p>;\r\nError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Error;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst LoadMoreButton = ({ handleClick }) => (\r\n  <div className=\"container\">\r\n    <button className=\"Button\" type=\"button\" onClick={handleClick}>\r\n      Load more\r\n    </button>\r\n  </div>\r\n);\r\n\r\nLoadMoreButton.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\nexport default LoadMoreButton;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleClose = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleClose}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onCardClick: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    const { images } = this.props;\r\n    return images.map(({ id, webformatURL, tags }) => (\r\n      <li className=\"ImageGalleryItem\" key={id}>\r\n        <img\r\n          onClick={() => this.props.onCardClick(id)}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\nimport imagesAPI from \"./utils/imagesAPI\";\nimport Spinner from \"./components/loader\";\nimport SearchBar from \"./components/searchBar\";\nimport ImageGallery from \"./components/imageGallery\";\nimport Error from \"./components/error\";\nimport LoadMoreButton from \"./components/loadMoreButton\";\nimport Modal from \"./components/modal\";\nimport \"./styles.css\";\nimport ImageGalleryItem from \"./components/imageGalleryItem\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    showModal: false,\n    modalContent: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    const prevImages = prevState.images;\n    const nextImages = this.state.images;\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n    if (prevImages !== nextImages) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({\n      loading: true,\n    });\n    imagesAPI\n      .fetchImagesWithQuery(searchQuery, page)\n      .then((images) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n  handleSearchSubmit = (query) => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n  toggleModal = () => {\n    this.setState((prevState) => ({ showModal: !prevState.showModal }));\n  };\n  handlerModalContent = (id) => {\n    const content = this.state.images.find((image) => id === image.id);\n    this.setState({ modalContent: content.largeImageURL });\n  };\n  render() {\n    const { error, loading, images, showModal, modalContent } = this.state;\n    return (\n      <>\n        <SearchBar onSubmit={this.handleSearchSubmit} />\n        {error && <Error message={`OOPS: ${error.message}`} />}\n        {loading && <Spinner />}\n        {images.length > 0 && (\n          <ImageGallery onImageClick={this.toggleModal}>\n            <ImageGalleryItem\n              images={images}\n              onCardClick={this.handlerModalContent}\n            ></ImageGalleryItem>\n          </ImageGallery>\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={modalContent} alt=\"modal\" />\n          </Modal>\n        )}\n        {images.length > 0 && !loading && (\n          <LoadMoreButton handleClick={this.fetchImages} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}